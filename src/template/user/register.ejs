<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
<div class="container mt-5">
    <h2>Register</h2>
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" class="form-control" id="username" name="username" required>
        <small id="usernameError" class="text-danger"></small>
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" class="form-control" id="email" name="email" required
               onblur="validateEmail()">
        <small id="emailError" class="text-danger"></small>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" name="password" required
               onblur="validatePassword()">
        <small id="passwordError" class="text-danger"></small>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required
               onblur="validateConfirmPassword()">
        <small id="confirmPasswordError" class="text-danger"></small>
    </div>
    <div class="form-group">
        <label for="firstName">First Name</label>
        <input type="text" class="form-control" id="firstName" name="firstName">
        <small id="firstNameError" class="text-danger"></small>
    </div>
    <div class="form-group">
        <label for="lastName">Last Name</label>
        <input type="text" class="form-control" id="lastName" name="lastName">
        <small id="lastNameError" class="text-danger"></small>
    </div>
    <button type="button" class="btn btn-primary" onclick="registerUser()">Register</button>
    <small id="generalSuccess" class="text-success"></small>
    <small id="generalError" class="text-warning"></small>
    <p class="mt-3">Already have an account? <a href="/login">Login</a></p>
</div>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        var token = localStorage.getItem("token");
        console.log("Token:", token);

        if(token){
            console.log("Redirecting to /book/list");
            window.location.href = "/book/list";
        }
    });
</script>
<script>
    const successElement = document.getElementById("generalSuccess");
    const errorElement = document.getElementById("generalError");
    function clearMessages() {
        successElement.innerText = "";
        errorElement.innerText = "";
    }
    setInterval(clearMessages, 3000);

    function validateField(fieldId, errorId, errorMessage) {
        const fieldValue = document.getElementById(fieldId).value;
        const errorElement = document.getElementById(errorId);

        // Reset previous errors
        errorElement.innerText = '';

        // Validate field
        if (!fieldValue.trim()) {
            errorElement.innerText = errorMessage;
        }
    }

    function validateEmail() {
        const emailRegex = /^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$/;
        const email = document.getElementById('email').value;
        const errorElement = document.getElementById('emailError');

        // Reset previous errors
        errorElement.innerText = '';

        // Validate email
        if (!email.trim() || !emailRegex.test(email)) {
            errorElement.innerText = 'Enter a valid email address';
        }
    }

    function validatePassword() {
        const password = document.getElementById('password').value;
        const errorElement = document.getElementById('passwordError');

        // Reset previous errors
        errorElement.innerText = '';

        // Validate password
        if (password.length < 8 || !/\d/.test(password) || !/[a-zA-Z]/.test(password)) {
            errorElement.innerText = 'Password must be at least 8 characters and contain both letters and numbers';
        }
    }

    function validateConfirmPassword() {
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        const errorElement = document.getElementById('confirmPasswordError');

        // Reset previous errors
        errorElement.innerText = '';

        // Validate confirm password
        if (password !== confirmPassword) {
            errorElement.innerText = 'Passwords do not match';
        }
    }

    function validateForm() {
        // Call onBlur validation for each field
        validateField('username', 'usernameError', 'Username is required');
        validateField('firstName', 'firstNameError', 'First Name is required');
        validateField('lastName', 'lastNameError', 'Last Name is required');
        validateEmail();
        validatePassword();
        validateConfirmPassword();

        // Add more validation as needed...

        // Check if there are any error messages
        const errorMessages = document.querySelectorAll('.text-danger');
        for (const errorMessage of errorMessages) {
            if (errorMessage.innerText.trim() !== '') {
                return false; // Form is invalid
            }
        }

        return true; // Form is valid
    }

    function registerUser() {
        if (validateForm()) {
            const username = document.getElementById('username').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const firstName = document.getElementById('firstName').value;
            const lastName = document.getElementById('lastName').value;

            // Create user object
            const userData = {
                username,
                email,
                password,
                firstName,
                lastName
            };
            axios.post('/api/v1/user/register', userData)
                .then(() => {
                    const successElement = document.getElementById("generalSuccess");
                    successElement.innerText = "User registration successful!!"
                })
                .catch(error => {
                    const errorElement = document.getElementById("generalError");
                    errorElement.innerText = error.response.data.message || "Something Went Wrong!!"
                });
        }
    }
</script>
</body>
</html>
